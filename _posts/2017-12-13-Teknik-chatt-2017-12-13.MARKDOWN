---
layout: post
title: Teknik-chatt 2017-12-13
---
### jenspeterolsson - 2017-12-13 07:28 56s
Apropå parcel så har jag varken provat det eller brunch men jag hade gärna testat brunch i ett lite större projekt
### oscarnylander - 2017-12-13 09:57 22s
Försökte ta en titt igår på hur långt Rust kommit som språk för att skapa webapplikationer och drog snabbt slutsatsen att det inte ens är i närheten av vart det behöver vara för att kunna övervägas för webapplikationsutveckling.

Så nu vet vi det!
### oscarnylander - 2017-12-13 10:11 42s
[http://www.michaelnygard.com/blog/2017/12/the-entity-service-antipattern/](http://www.michaelnygard.com/blog/2017/12/the-entity-service-antipattern/)

Vad tycker ni, är entity services korrekt väg att gå eller ett anti-pattern?
### oscarnylander - 2017-12-13 10:12 33s
[https://blogs.technet.microsoft.com/dataplatforminsider/2017/12/12/try-mssql-cli-a-new-interactive-command-line-tool-for-sql-server/](https://blogs.technet.microsoft.com/dataplatforminsider/2017/12/12/try-mssql-cli-a-new-interactive-command-line-tool-for-sql-server/)

Ett verktyg likt pgcli och mycli finns nu till mssql!

`In order to install mssql-cli, you must have Python on your machine.` Oväntat för Microsoft-mjukvara!
### jenspeterolsson - 2017-12-13 01:00 07s
Frågan om entity services är intressant. Den stora fördelen med entiteter tycker jag är att rätt valda så kan man få ett gemensamt synsätt på systemet hela vägen från beställare via utvecklare till användare. Ju mer specifika och konkreta entiteter man använder, desto bättre. Jag tycker alltså att tydligheten är ett stort skäl till att det många gånger är bra att börja bygga tjänster utifrån entiteter. Å andra sidan, om det finns en entitet "Product" i ett e-handelssystem med ett mycket stort antal produkter och transaktioner så kommer knappast samma mikrotjänst på ett bra sätt kunna hantera CRUD, att hämta detaljer för en order och att göra en bred sökning bland alla produkter utifrån t.ex. en kategori. Det sista fallet med sök skulle t.ex. kunna vara en mikrotjänst som använder Elastic Search och heter "ProductSearch".  Så jag tror alltså inte på ett regelverk där det måste vara antingen eller. Och jag tror också att även om man väljer att designa utifrån processflöden så får man samma problem med dependencies (och dessutom vill processflöden gärna växa över tid både i omfattning och komplexitet). Och en ShoppingService kommer behöva info från en OrderService (och båda behöver i sin tur info från ProductSearchService o.s.v.).
### jenspeterolsson - 2017-12-13 01:02 42s
Den stora bristen i exemplet är att det inte analyserar hur man kan abstrahera kopplingarna mellan tjänster. Detta problem är i stort det samma oavsett entity services, men att inte ha direkta dependencies mellan url:er etc. är extremt viktigt i ett större system om man ska få mer av fördelarna och mindre av nackdelarna med micro services. Alltså API gateways, routing med proxies o.s.v.
### jenspeterolsson - 2017-12-13 01:03 35s
Med denna långa utläggning vill jag alltså ha sagt att det kan vara ett anti-pattern men att det inte behöver vara det :wink:
